#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        euro: euro {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&kp RA(N5)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sharp: sharp {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp LS(N3)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        }

        arob: arobase {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp LS(N2)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        }
    };

    macros {
        chevron_l: chevron_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp KP_N6 &kp KP_N0>
                , <&macro_release &kp LEFT_ALT>
                ;
        };

        chevron_r: chevron_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp KP_N6 &kp KP_N2>
                , <&macro_release &kp LEFT_ALT>
                ;
        };

        e_aigu: e_aigu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp SQT &kp E>
                ;
        };

        e_grave: e_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GRAVE &kp E>
                ;
        };

        e_circ: e_circonflexe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp KP_N6>
                , <&macro_release &kp LSHIFT>
                , <&macro_tap &kp E>
                ;
        };

        e_trem: e_trema {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp SQT>
                , <&macro_release &kp LSHIFT>
                , <&macro_tap &kp E>
                ;
        };

        a_grave: a_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GRAVE &kp A>
                ;
        };

        a_circ: a_circonflexe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp KP_N6>
                , <&macro_release &kp LSHIFT>
                , <&macro_tap &kp A>
                ;
        };


        u_grave: u_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GRAVE &kp U>
                ;
        };

        u_circ: u_circonflexe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp KP_N6>
                , <&macro_release &kp LSHIFT>
                , <&macro_tap &kp U>
                ;
        };

        u_trem: u_trema {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp SQT>
                , <&macro_release &kp LSHIFT>
                , <&macro_tap &kp U>
                ;
        };
        
    Accent circonflexe ( î, ô ) → ^ + voyelle
    Tréma (ï, ö) → " + voyelle
    Cédille (ç) → ’ + c


    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC     &kp N1        &kp N2        &kp N3  &kp N4     &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp DELETE
&kp TAB     &kp Q         &kp W         &kp E   &kp R      &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BACKSPACE
&kp CAPS    &kp A         &kp S         &kp D   &kp F      &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT   &kp Z         &kp X         &kp C   &kp V      &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
&kp C_MUTE  &kp LEFT_WIN  &kp LEFT_ALT  &mo 1   &kp SPACE  &kp LCTRL    &kp ENTER        &kp RCTRL  &kp SPACE  &kp RALT   &mo 2    &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "qwerty";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3          &kp F4           &kp F5             &mmv MOVE_UP     &kp F6     &kp F7     &kp F8     &kp F9           &kp F10       &kp F11
&trans      &kp TAB          &kp HOME        &kp UP_ARROW    &kp END          &kp PG_UP          &mmv MOVE_DOWN   &kp SLASH  &kp KP_N7  &kp KP_N8  &kp KP_N9        &kp ASTERISK  &kp F12
&trans      &kp CAPS         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_DN          &mmv MOVE_LEFT   &kp MINUS  &kp KP_N4  &kp KP_N5  &kp KP_N6        &kp KP_N0     &trans
&trans      &rgb_ug RGB_OFF  &kp C_VOL_DN    &kp C_MUTE      &kp C_VOLUME_UP  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &kp COMMA  &kp KP_N1  &kp KP_N2  &kp KP_NUMBER_3  &kp KP_DOT    &trans
&kp C_MUTE  &trans           &trans          &trans          &trans           &trans             &mkp LCLK        &trans     &trans     &trans     &trans           &trans
            >;

            display-name = "Fn";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&soft_off    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans          &trans           &trans           &trans  &trans  &soft_off
&sys_reset   &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans          &trans           &trans           &trans  &trans  &sys_reset
&bootloader  &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans          &trans           &trans           &trans  &trans  &bootloader
&trans       &trans        &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_EFF  &trans  &trans  &trans
&trans       &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans          &trans           &trans           &trans  &trans
            >;

            display-name = "BT";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Ergo2qw";
            bindings = <
&gresc      &euro         &kp N2        &kp N3     &kp N4     &kp N5       &kp UP_ARROW     &kp N6      &kp N7     &kp N8    &sharp     &arob     &kp DELETE
&kp TAB     &kp Q         &kp C         &kp O      &kp P      &kp W        &kp DOWN_ARROW   &kp J       &kp M      &kp D     &sl 1      &kp Y     &kp BACKSPACE
&to 5       &kp A         &kp S         &kp E      &kp N      &kp F        &kp LEFT_ARROW   &kp L       &kp R      &kp T     &kp I      &kp U     &kp ENTER
&mo 4       &kp Z         &kp X         &kp MINUS  &kp V      &kp B        &kp RIGHT_ARROW  &kp PERIOD  &kp H      &kp G     &kp COMMA  &kp K     &mo 4
&kp C_MUTE  &kp LEFT_WIN  &kp LEFT_ALT  &mo 1      &kp SPACE  &kp LCTRL    &kp ENTER        &kp RCTRL   &kp SPACE  &kp RALT  &mo 2      &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            label = "Ergo2qw_default";
        };

        layer_4 {
            label = "Ergo2qw_shift";
            display-name = "Ergo2qw_shift";
            bindings = <
&trans      &trans     &chevron_l &chevron_r   &trans     &trans    &trans   &trans       &trans     &trans    &trans     &trans    &trans
&kp LS(TAB) &trans     &trans     &trans       &trans     &trans    &trans   &trans       &trans     &trans    &kp EXCL   &trans    &trans
&trans      &trans     &trans     &trans       &trans     &trans    &trans   &trans       &trans     &trans    &trans     &trans    &trans
&kp LSHIFT  &trans     &trans     &kp LS(FSLH) &trans     &trans    &trans   &kp LS(SEMI) &trans     &trans    &kp SEMI   &trans    &kp RSHIFT
&trans      &trans     &trans     &trans       &trans     &trans    &trans   &trans       &trans     &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
                
        layer_5 {
            label = "Ergo2qw_caps";
            display-name = "Ergo2qw_caps";
            bindings = <
&none       &kp N1     &kp N2     &kp N3       &kp N4     &kp N5    &trans   &kp N6       &kp N7     &kp N8    &kp N9     &kp N0    &trans
&trans      &trans     &trans     &trans       &trans     &trans    &trans   &trans       &trans     &trans    &trans     &trans    &trans
&kp CAPS    &trans     &trans     &trans       &trans     &trans    &trans   &trans       &trans     &trans    &trans     &trans    &trans
&kp LSHIFT  &trans     &trans     &kp LS(FSLH) &trans     &trans    &trans   &kp LS(SEMI) &trans     &trans    &kp SEMI   &trans    &kp RSHIFT
&trans      &trans     &trans     &trans       &trans     &trans    &trans   &trans       &trans     &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
                
        layer_6 {
            label = "Ergo2qw_1dk";
            display-name = "Ergo2qw_1dk";
            bindings = <
&none       &kp N1     &kp N2        &kp N3       &kp N4     &kp N5     &trans   &kp N6       &kp N7     &kp N8     &kp N9     &kp N0    &trans
&trans      &kp LS(N6) &kp LS(COMMA) &kp LS(DOT)  &kp LS(N4) &kp LS(N5) &trans   &kp LS(N2)   &kp LS(N7) &kp LS(N8) &kp SQT    &kp GRAVE &trans
&kp CAPS    &trans     &trans        &trans       &trans     &trans     &trans   &trans       &trans     &trans     &trans     &trans    &trans
&kp LSHIFT  &trans     &trans        &kp LS(FSLH) &trans     &trans     &trans   &kp LS(SEMI) &trans     &trans     &kp SEMI   &trans    &kp RSHIFT
&trans      &trans     &trans        &trans       &trans     &trans     &trans   &trans       &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
    };
};
